SUBIECTE LISP:

I
1.1. de inlocuit o functie ca sa nu mai fie recursive call in LISP
1.2.inlocuit recursive call in PROLOG
1.3.rezultatul unei operatii using mapcar sau mapcon etc LISP
1.4. sa dam rezultatul unui apel al unei functii PROLOG
II. PROLOG permutations
II.LISP map functions

-> to read about MAPCON,FUNCALL,MAPCAR,FINDALL

(defun f(l1 l2)
    (append (f(car l1)l2)
            (cond 
                ((null l1)(cdr l2))
                (T(list (f(car l1)l2)(car l2)))
                )
            )
    )

;(print(f '((1 2)1 2 3) '(2 5 1)))

(defun g(l)
    (mapcon #'list l))

(print(apply #'append (mapcon #'g'(1 2))))


;remove the elements divisible by 3
(defun removeElems(arr)
    (cond
        ((null arr) nil)
        ((and (numberp  arr) (= (mod arr 3) 0)) nil )
        ((atom arr)(list arr))
        (T (list(mapcan #'removeElems arr)))
                        )                                
    
)

(print(removeElems '( 1 9 5 (3 A) 8 (9 5 6))))

(print (removeElems '(1 (2 A (3 A)) (6))))
