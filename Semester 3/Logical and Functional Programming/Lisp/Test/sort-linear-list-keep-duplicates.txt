;sort linear list keep duplicates
;Mathematical model
;findMini(l1...ln, min) = min if the list is empty
                        ; findMini(l2...ln,l1) if min<l1
                        ; findMini(l2...ln,min)

(defun findMini(arr min)
    (cond
        ((null arr) min)
        ((<(car arr)min) (findMini (cdr arr) (car arr)))
        (T(findMini(cdr arr) min))
        )
)

;sortKeepDuplicates(l1...ln)= nil if the list is empty
                            ; findMini(l1...ln,99999) U (sortKeepDuplicates(removeOnce (l1...ln,(findMini l1...ln 99999),0)))

(defun sortKeepDuplicates(arr)
    (cond
        ((null arr) nil)
        (T(cons (findMini arr 99999) (sortKeepDuplicates (removeOnce arr (findMini arr 9999) 0))))
    )
)

;removeOnce(l1...ln,el,count) = nil if the list is empty
                               ; removeOnce(l2..ln,el,count+1) if l1=el and count=0
                               ;l1 U removeOnce(l2...ln,el,count)

(defun removeOnce (arr el count)
        (cond 
            ((null arr)nil)
            ((and (= (car arr) el) (= count 0)) (removeOnce(cdr arr) el (+ count 1)))
            (T(cons (car arr) (removeOnce(cdr arr) el count)))
            
            )
)

;(print(removeOnce '(9 7 8 5 4 7 7 ) 7 0))
(print(sortKeepDuplicates '(9 7 5 8 4 8 7 9 5)))