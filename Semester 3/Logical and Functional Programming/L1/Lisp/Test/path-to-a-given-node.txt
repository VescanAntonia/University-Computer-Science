(defun apare (l e)
    (cond 
        ((null l) nil)
        ((equal (car l) e) t )
        (t (or (apare (cadr l) e) (apare (caddr l) e)))
    )
)

(defun cale (l e)
    (cond
        ((not (apare l e)) nil)
        ((equal (car l) e)(list  e) )
        ((apare (cadr l) e) (cons (car l) (cale (cadr l) e)))
        (t (cons (car l) (cale (caddr l) e)))
    )
)    

(print (cale '(A (B) (C (D) (E))) 'E))