;Mathematical model
;getMaxi = nil if a and b are not numbers
        ; a if b is not a number
        ; b if a is not a number
        ; a if a>b
        ; b otherwise

(defun getMaxi(a b)
    (cond
        ((and(not(numberp a)) (not(numberp b))) nil)
        ((not(numberp b))a)
        ((not (numberp a))b)
        ((> a b) a)
        ( T b)
        
        )
    
)


; findMaxim(l1...ln) = l1 if the list has only one element and l1 is an atom
                      ;getMaxi(findMaxim(l1),findMaxim(l2...ln))
                      ;getMaxi(l1,findMaxim(l2...ln)) otherwise

(defun findMaxim(arr)
    (cond
        ((and(null (cdr arr)) (atom (car arr))) (car arr) )
        (T (getMaxi (car arr) (findMaxim(cdr arr))))
        
        )
    
)

(print(findMaxim '(8 9 6 (85 4) 10 (85 86))))