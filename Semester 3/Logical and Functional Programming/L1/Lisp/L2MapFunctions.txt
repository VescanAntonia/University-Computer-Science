;3. Define a function to tests the membership of a node in a n-tree represented as (root list_of_nodes_subtree1 ... list_of_nodes_subtreen)
; Eg. tree is (a (b (c)) (d) (E (f))) and the node is "b" => true

; findNode(arr,nod) = true if arr = nod
                    ; false if arr != nod
                    ; findNode(l1,nod) or findNode(l2,nod) or... or findNode(ln,nod) otherwise

(defun findNode(arr nod)
    (cond
        ((and (atom arr ) (equal arr nod)) T)
        ((atom arr) nil)
        (T (some #'identity (mapcar #'(lambda (a) (findNode a nod)) arr)))
    )
)

(print(findNode '("a" ("b" ("c")) ("d") ("E" ("f"))) "b"))