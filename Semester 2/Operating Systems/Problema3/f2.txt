

//Write 2 c programs, A and B. A will create 2 prcesses p1 and p2. p1 will
//have provided (by any means (necessary)) a file containing only numbers (as
//many as you like) then it will read from the standard input (keyboard)
//a number (n). p1 will send the first n numbers from the file to p2 via pipe.
//p2 will send the sum of al the odd numbers received to B, via fifo.
//B will display on the standard output (the console) the number received.
//The source file must be compiled using gcc with -Wall -g options WITHOUT WARNINGS OR SYNTAX ERRORS!!!
//Memory leacks and zombie processes are not allowed.
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/wait.h>
#include <sys/stat.h>
#include <sys/types.h>
int main(int argc, char* argv[])
{
	int p[2];
	pipe(p);
	if(fork()==0)
	{
		char nume_fisier[1001];
		printf("Introduceti numele unui fisier existent: ");
		scanf("%s",nume_fisier);
		int n,nr;
		printf("Introduceitu un numar natural de la tastatura: ");
		scanf("%d",&nr);
		FILE* f;
		f=fopen(nume_fisier,"r");
		int i;
		write(p[1],&nr,sizeof(int));
		for(i=1; i<=nr; i++)
		{
		fscanf(f,"%d",&n);
		write(p[1],&n,sizeof(int));
		printf("%d\n", n);
		}
		close(p[1]);
		exit(0);
	}
	wait(0);
	if(fork()==0)
	{
		int i,val,cnt,suma=0;
		read(p[0],&cnt,sizeof(int));
		for(i=1; i<=cnt; i++)
		{
		read(p[0],&val,sizeof(int));
		if(abs(val)%2==1) suma=suma+val;
		}
		char* myfifo="/tmp/fifo1";
		mkfifo(myfifo,0666);
		int fd=open(myfifo,O_WRONLY);
		write(fd,&suma,sizeof(int));
		close(p[1]);
		close(fd);
		exit(0);
	}
	wait(0);
	close(p[0]);
	close(p[1]);
	return 0;
}




#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/wait.h>
#include <sys/stat.h>
#include <sys/types.h>
int main(int argc, char* argv[])
{
	char* myfifo="/tmp/fifo1";
	int fd=open(myfifo,O_RDONLY);
	int suma;
	read(fd,&suma,sizeof(int));
	printf("Suma este %d\n",suma);
	close(fd);
	unlink("/tmp/fifo1");
	return 0;
}
